on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize

name: Rust CI

jobs:
  rust_ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        rust: [stable, beta, nightly]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-${{ matrix.rust }}-build-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.rust }}-build-target-

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
          targets: wasm32-unknown-unknown
          components: rustfmt, clippy

      - name: Install required packages
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt update;sudo apt install libgtk-3-dev libasound2-dev

      - name: Install required packages
        if: matrix.os == 'windows-latest'
        run: choco install ninja

      - run: cargo fmt --all -- --check
      - run: cargo clippy --all -- -D warnings
      - run: cargo clippy --target wasm32-unknown-unknown -- -D warnings
      - run: cargo test --all
